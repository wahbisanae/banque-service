{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\banque-service\\\\banque-service\\\\banque-frontend\\\\src\\\\components\\\\TransactionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TRANSACTIONS = gql`\n  query GetTransactions($compteId: ID!) {\n    compteTransactions(compteId: $compteId) {\n      id\n      montant\n      type\n      date\n    }\n  }\n`;\nconst TransactionsList = ({\n  compteId\n}) => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSACTIONS, {\n    variables: {\n      compteId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement des transactions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Transactions pour le Compte ID: \", compteId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.compteTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [transaction.type, \" - \", transaction.montant, \" \\u20AC - \", transaction.date]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useEffect","useState","gql","useQuery","jsxDEV","_jsxDEV","GET_TRANSACTIONS","TransactionsList","compteId","_s","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","compteTransactions","map","transaction","type","montant","date","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/banque-service/banque-service/banque-frontend/src/components/TransactionsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst GET_TRANSACTIONS = gql`\r\n  query GetTransactions($compteId: ID!) {\r\n    compteTransactions(compteId: $compteId) {\r\n      id\r\n      montant\r\n      type\r\n      date\r\n    }\r\n  }\r\n`;\r\n\r\nconst TransactionsList = ({ compteId }) => {\r\n  const { loading, error, data } = useQuery(GET_TRANSACTIONS, {\r\n    variables: { compteId },\r\n  });\r\n\r\n  if (loading) return <p>Chargement des transactions...</p>;\r\n  if (error) return <p>Erreur : {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h3>Transactions pour le Compte ID: {compteId}</h3>\r\n      <ul>\r\n        {data.compteTransactions.map((transaction) => (\r\n          <li key={transaction.id}>\r\n            {transaction.type} - {transaction.montant} â‚¬ - {transaction.date}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGJ,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACG,gBAAgB,EAAE;IAC1DO,SAAS,EAAE;MAAEL;IAAS;EACxB,CAAC,CAAC;EAEF,IAAIE,OAAO,EAAE,oBAAOL,OAAA;IAAAS,QAAA,EAAG;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACzD,IAAIP,KAAK,EAAE,oBAAON,OAAA;IAAAS,QAAA,GAAG,WAAS,EAACH,KAAK,CAACQ,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEjD,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAI,kCAAgC,EAACN,QAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnDb,OAAA;MAAAS,QAAA,EACGF,IAAI,CAACQ,kBAAkB,CAACC,GAAG,CAAEC,WAAW,iBACvCjB,OAAA;QAAAS,QAAA,GACGQ,WAAW,CAACC,IAAI,EAAC,KAAG,EAACD,WAAW,CAACE,OAAO,EAAC,YAAK,EAACF,WAAW,CAACG,IAAI;MAAA,GADzDH,WAAW,CAACI,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACT,EAAA,CApBIF,gBAAgB;EAAA,QACaJ,QAAQ;AAAA;AAAAwB,EAAA,GADrCpB,gBAAgB;AAsBtB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}