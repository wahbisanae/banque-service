{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\banque-service\\\\banque-service\\\\banque-frontend\\\\src\\\\components\\\\TransactionsList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TRANSACTIONS = gql`\n  query GetTransactions($compteId: ID!) {\n    compteTransactions(compteId: $compteId) {\n      id\n      montant\n      type\n      date\n    }\n  }\n`;\nconst TransactionsList = ({\n  compteId\n}) => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSACTIONS, {\n    variables: {\n      compteId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement des transactions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.compteTransactions.length > 0 ? data.compteTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          padding: '10px',\n          borderBottom: '1px solid #ddd'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: transaction.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), \" - \", transaction.montant, \" \\u20AC - \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: transaction.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 106\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune transaction trouv\\xE9e pour ce compte.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","gql","useQuery","jsxDEV","_jsxDEV","GET_TRANSACTIONS","TransactionsList","compteId","_s","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","compteTransactions","length","map","transaction","style","padding","borderBottom","fontWeight","type","montant","date","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/banque-service/banque-service/banque-frontend/src/components/TransactionsList.js"],"sourcesContent":["import React from 'react';\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst GET_TRANSACTIONS = gql`\r\n  query GetTransactions($compteId: ID!) {\r\n    compteTransactions(compteId: $compteId) {\r\n      id\r\n      montant\r\n      type\r\n      date\r\n    }\r\n  }\r\n`;\r\n\r\nconst TransactionsList = ({ compteId }) => {\r\n  const { loading, error, data } = useQuery(GET_TRANSACTIONS, {\r\n    variables: { compteId },\r\n  });\r\n\r\n  if (loading) return <p>Chargement des transactions...</p>;\r\n  if (error) return <p>Erreur : {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      {/* Suppression du titre redondant ici */}\r\n      <ul>\r\n        {data.compteTransactions.length > 0 ? (\r\n          data.compteTransactions.map((transaction) => (\r\n            <li key={transaction.id} style={{ padding: '10px', borderBottom: '1px solid #ddd' }}>\r\n              <span style={{ fontWeight: 'bold' }}>{transaction.type}</span> - {transaction.montant} € - <span>{transaction.date}</span>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>Aucune transaction trouvée pour ce compte.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGJ,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACG,gBAAgB,EAAE;IAC1DO,SAAS,EAAE;MAAEL;IAAS;EACxB,CAAC,CAAC;EAEF,IAAIE,OAAO,EAAE,oBAAOL,OAAA;IAAAS,QAAA,EAAG;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACzD,IAAIP,KAAK,EAAE,oBAAON,OAAA;IAAAS,QAAA,GAAG,WAAS,EAACH,KAAK,CAACQ,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEjD,oBACEb,OAAA;IAAAS,QAAA,eAEET,OAAA;MAAAS,QAAA,EACGF,IAAI,CAACQ,kBAAkB,CAACC,MAAM,GAAG,CAAC,GACjCT,IAAI,CAACQ,kBAAkB,CAACE,GAAG,CAAEC,WAAW,iBACtClB,OAAA;QAAyBmB,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAiB,CAAE;QAAAZ,QAAA,gBAClFT,OAAA;UAAMmB,KAAK,EAAE;YAAEG,UAAU,EAAE;UAAO,CAAE;UAAAb,QAAA,EAAES,WAAW,CAACK;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,OAAG,EAACK,WAAW,CAACM,OAAO,EAAC,YAAK,eAAAxB,OAAA;UAAAS,QAAA,EAAOS,WAAW,CAACO;QAAI;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GADnHK,WAAW,CAACQ,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACL,CAAC,gBAEFb,OAAA;QAAAS,QAAA,EAAG;MAA0C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACT,EAAA,CAxBIF,gBAAgB;EAAA,QACaJ,QAAQ;AAAA;AAAA6B,EAAA,GADrCzB,gBAAgB;AA0BtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}