{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\banque-service\\\\banque-service\\\\banque-frontend\\\\src\\\\components\\\\AddTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, gql } from '@apollo/client';\n\n// GraphQL Mutation pour ajouter une transaction\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_TRANSACTION = gql`\n  mutation addTransaction($transactionRequest: TransactionInput!) {\n    addTransaction(transactionRequest: $transactionRequest) {\n      id\n      montant\n      date\n      type\n      compte {\n        id\n        solde\n      }\n    }\n  }\n`;\nconst GET_COMPTES = gql`\n  query {\n    allComptes {\n      id\n      solde\n      dateCreation\n      type\n    }\n  }\n`;\nconst AddTransaction = () => {\n  _s();\n  const [compteId, setCompteId] = useState('');\n  const [montant, setMontant] = useState('');\n  const [date, setDate] = useState('');\n  const [type, setType] = useState('DEPOT'); // 'DEPOT' par défaut\n  const [comptes, setComptes] = useState([]);\n  const [addTransaction] = useMutation(ADD_TRANSACTION);\n  useEffect(() => {\n    // Charger la liste des comptes\n    client.query({\n      query: GET_COMPTES\n    }).then(result => {\n      setComptes(result.data.allComptes);\n    }).catch(error => {\n      console.error('Error fetching comptes:', error);\n    });\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Vérifier les données avant d'envoyer la mutation\n    if (!compteId || !montant || !date || !type) {\n      alert('Tous les champs doivent être remplis');\n      return;\n    }\n\n    // Appel à la mutation GraphQL pour ajouter une transaction\n    addTransaction({\n      variables: {\n        transactionRequest: {\n          compteId: parseInt(compteId),\n          // Assurez-vous de convertir les IDs\n          montant: parseFloat(montant),\n          date: date,\n          type: type\n        }\n      }\n    }).then(response => {\n      console.log('Transaction ajoutée:', response.data.addTransaction);\n    }).catch(error => {\n      console.error('Erreur lors de l\\'ajout de la transaction:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter une Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Compte:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: compteId,\n          onChange: e => setCompteId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"S\\xE9lectionner un compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), comptes.map(compte => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: compte.id,\n            children: [\"Compte \", compte.id, \" (\", compte.type, \" - Solde: \", compte.solde, \"\\u20AC)\"]\n          }, compte.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Montant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: montant,\n          onChange: e => setMontant(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type de transaction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DEPOT\",\n            children: \"D\\xE9p\\xF4t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RETRAIT\",\n            children: \"Retrait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ajouter la transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTransaction, \"Z0mA8SUbt0n7Tlth+E0tI9UKHU8=\", false, function () {\n  return [useMutation];\n});\n_c = AddTransaction;\nexport default AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useState","useEffect","useMutation","gql","jsxDEV","_jsxDEV","ADD_TRANSACTION","GET_COMPTES","AddTransaction","_s","compteId","setCompteId","montant","setMontant","date","setDate","type","setType","comptes","setComptes","addTransaction","client","query","then","result","data","allComptes","catch","error","console","handleSubmit","e","preventDefault","alert","variables","transactionRequest","parseInt","parseFloat","response","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","compte","id","solde","step","required","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/banque-service/banque-service/banque-frontend/src/components/AddTransaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\n\r\n// GraphQL Mutation pour ajouter une transaction\r\nconst ADD_TRANSACTION = gql`\r\n  mutation addTransaction($transactionRequest: TransactionInput!) {\r\n    addTransaction(transactionRequest: $transactionRequest) {\r\n      id\r\n      montant\r\n      date\r\n      type\r\n      compte {\r\n        id\r\n        solde\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_COMPTES = gql`\r\n  query {\r\n    allComptes {\r\n      id\r\n      solde\r\n      dateCreation\r\n      type\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddTransaction = () => {\r\n  const [compteId, setCompteId] = useState('');\r\n  const [montant, setMontant] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [type, setType] = useState('DEPOT'); // 'DEPOT' par défaut\r\n  const [comptes, setComptes] = useState([]);\r\n\r\n  const [addTransaction] = useMutation(ADD_TRANSACTION);\r\n\r\n  useEffect(() => {\r\n    // Charger la liste des comptes\r\n    client\r\n      .query({\r\n        query: GET_COMPTES,\r\n      })\r\n      .then((result) => {\r\n        setComptes(result.data.allComptes);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching comptes:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Vérifier les données avant d'envoyer la mutation\r\n    if (!compteId || !montant || !date || !type) {\r\n      alert('Tous les champs doivent être remplis');\r\n      return;\r\n    }\r\n\r\n    // Appel à la mutation GraphQL pour ajouter une transaction\r\n    addTransaction({\r\n      variables: {\r\n        transactionRequest: {\r\n          compteId: parseInt(compteId), // Assurez-vous de convertir les IDs\r\n          montant: parseFloat(montant),\r\n          date: date,\r\n          type: type,\r\n        },\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log('Transaction ajoutée:', response.data.addTransaction);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erreur lors de l\\'ajout de la transaction:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Ajouter une Transaction</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Compte:</label>\r\n          <select value={compteId} onChange={(e) => setCompteId(e.target.value)}>\r\n            <option value=\"\">Sélectionner un compte</option>\r\n            {comptes.map((compte) => (\r\n              <option key={compte.id} value={compte.id}>\r\n                Compte {compte.id} ({compte.type} - Solde: {compte.solde}€)\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Montant:</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            value={montant}\r\n            onChange={(e) => setMontant(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Type de transaction:</label>\r\n          <select value={type} onChange={(e) => setType(e.target.value)}>\r\n            <option value=\"DEPOT\">Dépôt</option>\r\n            <option value=\"RETRAIT\">Retrait</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\">Ajouter la transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}